/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
ACUTE DASHBOARD 

INPATIENT DISCHARGES 

CREATED BY TOM BARDSLEY 19 OCTOBER 2020
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

-- SET REPORTING PERIOD VARIABLES 

DECLARE @RP_START INT
DECLARE @RP_END INT
DECLARE @RP_STARTDATE DATE
DECLARE @RP_ENDDATE DATE

SET @RP_START = 1405 
SET @RP_END = (SELECT MAX(UniqMonthID) FROM MHDInternal.PreProc_Header) 

SET @RP_STARTDATE = (SELECT MIN(ReportingPeriodStartDate) FROM MHDInternal.PreProc_Header WHERE UniqMonthID = @RP_START)
SET @RP_ENDDATE = (SELECT MAX(ReportingPeriodEndDate) FROM MHDInternal.PreProc_Header WHERE UniqMonthID = @RP_END)


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LOG START  
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

INSERT INTO [MHDInternal].[PreProc_QueryStatus]

SELECT
	@RP_END AS [Month],
	'Acute Discharges Start' AS Step,
	GETDATE() AS [TimeStamp]



/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
IDENTIFY ONWARD REFERRALS TO ALLOCATE FOLLOW UP
TO OTHER PROVIDERS AND CHECK VALIDITY OF RECEIVING
PROVIDER
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_Onward') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_Onward

SELECT DISTINCT
	o.Person_ID,
	o.UniqServReqID,
	o.OnwardReferDate,
	o.OrgIdProv,
	CASE 
		WHEN map.OrgIDProvider IS NULL THEN NULL
		WHEN LEFT(o.OrgIDReceiving,1) = '8' THEN o.OrgIDReceiving 
		ELSE LEFT(o.OrgIDReceiving,3) 
	END AS OrgIDReceiving

INTO MHDInternal.Temp_AcuteDashboard_Onward

FROM MESH_MHSDS.MHS105OnwardReferral o

INNER JOIN MESH_MHSDS.[MHSDS_SubmissionFlags] f ON o.NHSEUniqSubmissionID = f.NHSEUniqSubmissionID AND f.Der_Use_Submission_Flag = 'Y'

LEFT JOIN 
(SELECT DISTINCT
	h.OrgIDProvider

FROM MESH_MHSDS.[MHS000Header] h

WHERE h.UniqMonthID BETWEEN @RP_START AND @RP_END) map ON CASE WHEN LEFT(o.OrgIDReceiving,1) = '8' THEN o.OrgIDReceiving ELSE LEFT(o.OrgIDReceiving,3) END = map.OrgIDProvider

WHERE CASE WHEN LEFT(o.OrgIDReceiving,1) = '8' THEN OrgIDProv ELSE LEFT(o.OrgIDReceiving,3) END <> o.OrgIdProv 


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
GET ALL DISCHARGES IN REPORTING PERIOD 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_Discharges') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_Discharges

SELECT 
	i.UniqMonthID
	,i.UniqHospProvSpellNum
	,i.Person_ID
	,r.Der_Pseudo_NHS_Number -- needed to link to ECDS attendances 
	,i.StartDateHospProvSpell 
	,i.StartTimeHospProvSpell 
	,CAST(ISNULL(i.StartTimeHospProvSpell,'00:00:00') AS datetime) + CAST(i.StartDateHospProvSpell AS datetime) AS StartDateTimeHospProvSpell 
	,i.DischDateHospProvSpell 
	,i.DischTimeHospProvSpell 
	,CAST(ISNULL(i.DischTimeHospProvSpell,'00:00:00') AS datetime) + CAST(i.DischDateHospProvSpell AS datetime) AS DischDateTimeHospProvSpell 
	,DATEADD(MONTH, DATEDIFF(MONTH, 0, i.DischDateHospProvSpell), 0) AS Disch_MonthYear
	,i.OrgIDProv 
	,COALESCE(o.OrgIDReceiving,i.OrgIDProv) AS ResponsibleProv
	,o1.Organisation_Name AS Provider_Name
	,CASE 
		WHEN o1.ODS_Organisation_Type = 'NHS TRUST' THEN 'NHS TRUST'
		WHEN o1.ODS_Organisation_Type = 'CARE TRUST' THEN 'NHS TRUST' 
		WHEN o1.ODS_Organisation_Type IN ('INDEPENDENT SECTOR HEALTHCARE PROVIDER','INDEPENDENT SECTOR H/C PROVIDER SITE','NON-NHS ORGANISATION') THEN 'NON-NHS TRUST' 
		ELSE 'Missing/Invalid' 
	END as Provider_Type
	,COALESCE(o2.Region_Code,'Missing/Invalid') AS Region_Code --- regions taken from CCG rather than provider 
	,COALESCE(o2.Region_Name,'Missing/Invalid') AS Region_Name
	,COALESCE(cc.New_Code,r.Der_SubICBCode,'Missing/Invalid') AS CCGCode
	,COALESCE(o2.Organisation_Name,'Missing/Invalid') AS [CCG name]
	,COALESCE(o2.STP_Code,'Missing/Invalid') AS STPCode
	,COALESCE(o2.STP_Name,'Missing/Invalid') AS [STP name]
	,d.HospitalBedTypeMH
	,CASE 
		WHEN d.HospitalBedTypeMH IN ('10','11','12','200','201','202') THEN 'Adult Acute (CCG commissioned)' 
		WHEN d.HospitalBedTypeMH IN ('13','14','15','16','17','18','19','20','21','22','203','204','205','206','207','208','209','210','211','212','213') THEN 'Adult Specialist' 
		WHEN d.HospitalBedTypeMH IN ('23','24','25','26','27','28','29','30','31','32','33','34','300','301','302','303','304','305','306','307','308','309','310','311') THEN 'CYP' 
		ELSE 'Missing/Invalid' 
	END as BedType_Category
	--,ISNULL(b.Main_Description_60_Chars,'Missing/Invalid') AS BedType
	,ISNULL(b.NationalCodeDefinition,'Missing/Invalid') AS BedType
	,r.AgeServReferRecDate
	,CASE 
		WHEN r.AgeServReferRecDate BETWEEN 0 AND 17 THEN '0-17' 
		WHEN r.AgeServReferRecDate BETWEEN 18 AND 64 THEN '18-64' 
		WHEN r.AgeServReferRecDate >= 65 THEN '65+' 
	END as AgeCat
	,CASE 
		WHEN i.DischMethCodeHospProvSpell NOT IN ('4','5') AND i.DischDestCodeHospProvSpell NOT IN ('30','37','38','48','49','50','53','79','84','87') 
			AND i.DischDateHospProvSpell < DATEADD(DD, -3, @RP_ENDDATE) THEN 1 ELSE 0 
	END AS ElgibleDischFlag
	,CASE WHEN d.HospitalBedTypeMH IN ('10', '11', '12', '16', '17', '18') THEN 1 ELSE 0 END AS AcuteBed
	,CASE WHEN d.HospitalBedTypeMH IN ('13', '14', '15', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34') THEN 1 ELSE 0 END AS OtherBed
	,CASE WHEN d.HospitalBedTypeMH NOT IN ('10', '11', '12', '16', '17', '18', '13', '14', '15', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34') THEN 1 ELSE 0 
		END AS InvalidBed
	,CASE WHEN d.HospitalBedTypeMH IS NULL THEN 1 ELSE 0 END AS MissingBed
	,CASE WHEN DATEDIFF(DD, i.DischDateHospProvSpell , r.PersDeathDate) <= 3  THEN 1 ELSE 0 END AS DiedBeforeFollowUp
	,CASE WHEN i.DischDestCodeHospProvSpell IN ('37', '38') THEN 1 ELSE 0 END AS PrisonCourtDischarge
	,CASE WHEN i.DischDateHospProvSpell < DATEADD(DD,-14, @RP_ENDDATE) AND DATEDIFF(DD, i.DischDateHospProvSpell , ISNULL(r.PersDeathDate,@RP_ENDDATE)) >=  14 THEN 1 ELSE 0 END as Eligible2wks
	,CASE WHEN i.DischDateHospProvSpell < DATEADD(MONTH, -2, @RP_ENDDATE) AND DATEDIFF(MONTH, i.DischDateHospProvSpell , ISNULL(r.PersDeathDate,@RP_ENDDATE)) >=  2 THEN 1 ELSe 0 END as Eligible2mnths 
	,ROW_NUMBER()OVER(PARTITION BY i.Person_ID, i.UniqHospProvSpellNum ORDER BY r.RecordNumber DESC) AS RN

INTO MHDInternal.Temp_AcuteDashboard_Discharges

FROM MHDInternal.PreProc_Inpatients i 

LEFT JOIN MHDInternal.PreProc_Inpatients d ON i.Person_ID = d.Person_ID AND i.UniqHospProvSpellNum = d.UniqHospProvSpellNum AND d.Der_LastWardStayRecord = 1 --- to get bed type information from last ward stay
LEFT JOIN MHDInternal.PreProc_Referral r ON i.RecordNumber = r.RecordNumber AND i.UniqServReqID = r.UniqServReqID AND (r.LADistrictAuth LIKE 'E%' OR r.LADistrictAuth IS NULL OR r.LADistrictAuth = '')

LEFT JOIN MHDInternal.Temp_AcuteDashboard_Onward o ON i.Person_ID = o.Person_ID AND i.UniqServReqID = o.UniqServReqID AND OnwardReferDate BETWEEN i.StartDateHospProvSpell AND i.DischDateHospProvSpell

LEFT JOIN Reporting_UKHD_ODS.Provider_Hierarchies o1 ON i.OrgIDProv = o1.Organisation_Code 
LEFT JOIN Internal_Reference.ComCodeChanges cc ON r.Der_SubICBCode = cc.Org_Code

LEFT JOIN Reporting_UKHD_ODS.Commissioner_Hierarchies o2 ON COALESCE(cc.New_Code,r.Der_SubICBCode) = o2.Organisation_Code

--LEFT JOIN UKHD_Data_Dictionary.Mental_Health_Admitted_Patient_Classification_SCD b ON d.HospitalBedTypeMH = b.Main_Code_Text COLLATE DATABASE_DEFAULT AND Is_Latest = 1
LEFT JOIN MHDInternal.Reference_MHSDSv6_BedTypes b ON d.HospitalBedTypeMH = b.MHAdmittedPatientClass

WHERE i.DischDateHospProvSpell IS NOT NULL ---- not using latest record, just looking at those with a discharge date
AND i.UniqMonthID BETWEEN @RP_START AND @RP_END 
AND i.DischDateHospProvSpell >= @RP_STARTDATE --- only discharges in this period 



/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
GET FOLLOW UP ACTIVITY WHICH INCLUDE DIRECT CARE CONTACTS, 
INDIRECT ACTIVITY, AND HOSPITAL SPELLS 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_FUP') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUP

SELECT 
	a.Person_ID 
	,a.OrgIDProv
	,a.Der_ContactDate AS FU_Date 
	,'Contact' AS ActivityType
	,CAST(a.Der_ActivityUniqID as VARCHAR) AS Activity_ID
	
INTO MHDInternal.Temp_AcuteDashboard_FUP

FROM MHDInternal.PreProc_Activity a 
JOIN (SELECT DISTINCT Person_ID FROM MHDInternal.Temp_AcuteDashboard_Discharges WHERE RN = 1 ) d ON a.Person_ID = d.Person_ID 

WHERE a.UniqMonthID BETWEEN @RP_START AND @RP_END
	AND a.AttendOrDNACode IN ('5','6')
	AND a.ConsMediumUsed IN ('01','02','03','04') --communication has be face to face/telephone/telemedicine or talk type for a person unable to speak

UNION ALL 

SELECT 
	i.Person_ID 
	,i.OrgIDProv 
	,i.StartDateHospProvSpell AS FU_Date 
	,'Spell' AS ActivityType
	,CAST(i.UniqHospProvSpellNum AS VARCHAR) AS Activity_ID

FROM MHDInternal.PreProc_Inpatients i 
JOIN (SELECT DISTINCT Person_ID FROM MHDInternal.Temp_AcuteDashboard_Discharges WHERE RN = 1 ) d ON i.Person_ID = d.Person_ID
WHERE i.Der_HospSpellRecordOrder = 1 
AND i.UniqMonthID BETWEEN @RP_START AND @RP_END



/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
GET FOLLOW UP CONTACTS FOR ELIGIBLE DISCHARGES 
LIMITED TO CONTACTS IN RESPONSIBLE ORGANISATION
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_FUPActivity') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUPActivity

SELECT 
	d.UniqHospProvSpellNum
	,d.Person_ID
	,d.OrgIDProv
	,d.ResponsibleProv 
	,d.DischDateHospProvSpell 
	,d.ElgibleDischFlag
	,d.DiedBeforeFollowUp
	,d.PrisonCourtDischarge
	,d.Eligible2wks
	,d.Eligible2mnths
	,f.FU_Date
	,f.OrgIDProv  AS Contact_OrgIDProv
	,f.ActivityType
	,ROW_NUMBER() OVER(PARTITION BY d.Person_ID, d.UniqHospProvSpellNum ORDER BY f.FU_Date) as ContNum

INTO MHDInternal.Temp_AcuteDashboard_FUPActivity 

FROM MHDInternal.Temp_AcuteDashboard_Discharges d  

JOIN MHDInternal.Temp_AcuteDashboard_FUP f ON f.Person_ID = d.Person_ID AND f.FU_Date > d.DischDateHospProvSpell AND f.OrgIdProv = d.ResponsibleProv
	AND DATEDIFF(DD, d.DischDateHospProvSpell, f.FU_Date) <= 60 --- limit to contacts within 2 months of discharge 

WHERE d.RN = 1




/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
GET FOLLOW UP MH A&E ATTENDANCES FROM ECDS -- PAUSED UNTIL I GET ECDS
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_FUPAttendances') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUPAttendances

SELECT 
	d.UniqHospProvSpellNum
	,d.Person_ID
	,d.Der_Pseudo_NHS_Number
	,d.OrgIDProv
	,d.StartDateHospProvSPell 
	,d.DischDateHospProvSpell 
	,d.DischDateTimeHospProvSpell 
	,d.ElgibleDischFlag
	,d.DiedBeforeFollowUp
	,d.PrisonCourtDischarge
	,d.Eligible2wks
	,d.Eligible2mnths
	,e.Generated_Record_ID 
	,e.ArrivalDateTime 
	,e.Der_Provider_Code AS Acute_Provider
	--,ROW_NUMBER() OVER(PARTITION BY d.Der_Pseudo_NHS_Number, d.UniqHospProvSpellNum ORDER BY e.ArrivalDateTime) AS AttendanceNum
	,ROW_NUMBER() OVER(PARTITION BY d.Der_Pseudo_NHS_Number, d.UniqHospProvSpellNum ORDER BY e.ArrivalDateTime ASC) as FirstAttendance 
	,ROW_NUMBER() OVER(PARTITION BY d.Der_Pseudo_NHS_Number, e.Generated_Record_ID ORDER BY d.DischDateHospProvSpell DESC, d.DischDateTimeHospProvSpell DESC) as LastDischarge --- to only link attendances to one prior spell 


INTO MHDInternal.Temp_AcuteDashboard_FUPAttendances

FROM MHDInternal.Temp_AcuteDashboard_Discharges d

JOIN 
	(SELECT	
	a.Generated_Record_ID
	,a.Der_Pseudo_NHS_Number
	,a.Der_Provider_Code
	,Arrival_Date
	,CAST(ISNULL(a.Arrival_Time,'00:00:00') AS datetime) + CAST(a.Arrival_Date AS datetime) AS ArrivalDateTime 
	FROM MESH_ECDS.EC_Core a
	WHERE a.Arrival_Date BETWEEN @RP_STARTDATE AND @RP_ENDDATE 
	AND a.EC_Department_Type = '01' --- Type 1 EDs only 
	AND a.Der_Dupe_Flag = 0  
	AND (EC_Chief_Complaint_SNOMED_CT IN ('248062006','272022009','48694002','248020004','7011001') --- MH related attendances
			OR EC_Injury_Intent_SNOMED_CT = '276853009' 
			OR COALESCE(LEFT(Der_EC_Diagnosis_All, NULLIF(CHARINDEX(',',Der_EC_Diagnosis_All),0)-1),Der_EC_Diagnosis_All) 
				IN ('52448006','2776000','33449004','72366004','197480006','13746004','58214004','69322001','397923000','30077003','44376007','17226007','50705009')
		)
	) e ON d.Der_Pseudo_NHS_Number = e.Der_Pseudo_NHS_Number 
	AND DATEDIFF(DD, d.DischDateTimeHospProvSpell, e.ArrivalDateTime) BETWEEN 0 AND 60 ---- attendances within 2 months of discharge 
	AND e.ArrivalDateTime > d.StartDateTimeHospProvSPell --- try to exclude A&E attendances which took place before the hospital spell (for spells last one day)

WHERE d.RN = 1 

/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
AGGREGATE FUP CONTACTS PER SPELL  
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_FUPContacts_Spell') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUPContacts_Spell

SELECT
	c.UniqHospProvSpellNum
	,c.Person_ID
	,c.OrgIDProv
	,c.DischDateHospProvSpell
	,COUNT(*) as Total_Contacts 
	,MAX(Eligible2wks) as Contact_Eligible2ks
	,MAX(Eligible2mnths) as Contact_Eligible2mnths
	,SUM(CASE WHEN ElgibleDischFlag = 1 AND Eligible2wks = 1 AND DATEDIFF(DD, DischdateHospProvSpell, FU_Date) <= 14 THEN 1 ELSE 0 END) as Contacts2weeks
	,SUM(CASE WHEN ElgibleDischFlag = 1 AND Eligible2mnths = 1 AND DATEDIFF(DD, DischdateHospProvSpell, FU_Date) <= 60 THEN 1 ELSE 0 END) as Contacts2months
	,MIN(CASE WHEN ContNum = 1 THEN FU_Date ELSE NULL END) as FirstCont
	,MAX(CASE WHEN ElgibleDischFlag = 1 AND DATEDIFF(DD, DischDateHospProvSpell, FU_Date)<= 3 THEN 1 ELSE 0 END) as FUP3day


INTO MHDInternal.Temp_AcuteDashboard_FUPContacts_Spell

FROM MHDInternal.Temp_AcuteDashboard_FUPActivity c 

GROUP BY c.UniqHospProvSpellNum, c.Person_ID, c.OrgIDProv, c.DischDateHospProvSpell 

ORDER BY 2


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
AGGREGATE FUP ATTENDANCES PER SPELL  
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_FUPAttendances_spell') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUPAttendances_spell

SELECT 
	a.UniqHospProvSpellNum
	,a.Person_ID
	,a.OrgIDProv
	,a.DischDateHospProvSpell
	,COUNT(*) as Total_Attendances --- should be the same as the 2 month count
	,MIN(CASE WHEN a.FirstAttendance = 1 AND a.LastDischarge = 1 THEN a.ArrivalDateTime ELSE NULL END) as FirstAttendance
	,MAX(Eligible2wks) as Attendance_Eligible2ks
	,MAX(Eligible2mnths) as Attendance_Eligible2mnths
	,MAX(CASE WHEN ElgibleDischFlag =1 AND Eligible2wks = 1 AND a.FirstAttendance = 1 AND a.LastDischarge = 1 AND DATEDIFF(DD, DischDateHospprovSPell, ArrivalDateTime) <= 14 THEN 1 ELSE 0 END) as Attendance2weeks
	,MAX(CASE WHEN ElgibleDischFlag = 1 AND Eligible2mnths = 1 AND a.FirstAttendance = 1 AND a.LastDischarge = 1 AND DATEDIFF(DD, DischDateHospprovSPell, ArrivalDateTime) <= 60 THEN 1 ELSE 0 END) as Attendance2months

INTO MHDInternal.Temp_AcuteDashboard_FUPAttendances_spell

FROM MHDInternal.Temp_AcuteDashboard_FUPAttendances a 

GROUP BY a.UniqHospProvSpellNum, Person_ID, OrgIDProv, DischDateHospProvSpell




/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
SUMMARISE POST DISCHARGE ACTIVTY FOR EACH HOSPITAL SPELL  
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_Master') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_Master

SELECT 
	d.UniqMonthID
	,d.UniqHospProvSpellNum
	,d.Person_ID
	,d.Der_Pseudo_NHS_Number 
	,d.DischDateHospProvSpell 
	,d.DischTimeHospProvSpell 
	,d.DischDateTimeHospProvSpell 
	,d.Disch_MonthYear
	,d.OrgIDProv 
	,d.ResponsibleProv
	,d.Provider_Name
	,d.Provider_Type
	,d.Region_Code 
	,d.Region_Name 
	,d.CCGCode
	,d.[CCG name]
	,d.STPCode
	,d.[STP name]
	,d.HospitalBedTypeMH
	,d.BedType_Category 
	,d.BedType
	,d.AgeServReferRecDate
	,d.AgeCat
	,d.ElgibleDischFlag
	,d.AcuteBed
	,d.DiedBeforeFollowUp
	,d.PrisonCourtDischarge
	,ISNULL(c.FUP3day,0) AS FUP3day
	,d.Eligible2wks
	,d.Eligible2mnths
	,ISNULL(c.Contacts2weeks,0) AS Contacts2weeks
	,ISNULL(c.Contacts2months,0) AS Contacts2months
	,ISNULL(a.Attendance2weeks,0) AS Attendance2weeks
	,ISNULL(a.Attendance2months,0) AS Attendance2months

INTO MHDInternal.Temp_AcuteDashboard_Master

FROM MHDInternal.Temp_AcuteDashboard_Discharges d

LEFT JOIN MHDInternal.Temp_AcuteDashboard_FUPContacts_Spell c ON d.Person_ID = c.Person_ID AND d.UniqHospProvSpellNum = c.UniqHospProvSpellNum
LEFT JOIN MHDInternal.Temp_AcuteDashboard_FUPAttendances_spell a ON d.Person_ID = a.Person_ID AND d.UniqHospProvSpellNum = a.UniqHospProvSpellNum

WHERE d.RN = 1 


/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
AGGREGATE 
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_Agg') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_Agg

SELECT 
	Disch_MonthYear 
	,OrgIDProv
	,Provider_Name
	,Provider_Type
	,Region_Code
	,Region_Name
	,CCGCode
	,[CCG name]
	,STPCode
	,[STP name]
	,AgeCat
	,BedType_Category
	,BedType
	,SUM(ElgibleDischFlag) AS Discharges 
	,SUM(ElgibleDischFlag) AS Discharges2
	,SUM(Eligible2wks) AS Eligible2wks
	,SUM(Eligible2wks) AS Eligible2wks2
	,SUM(Eligible2mnths) AS Eligible2mnths 
	,SUM(Eligible2mnths) AS Eligible2mnths2
	,SUM(FUP3day) as FUP_3day
	,SUM(Contacts2weeks) as Contacts2weeks
	,SUM(Contacts2months) as Contacts2months
	,SUM(Attendance2weeks) as Attendance2weeks
	,SUM(Attendance2months) as Attendance2months

INTO MHDInternal.Temp_AcuteDashboard_Agg

FROM MHDInternal.Temp_AcuteDashboard_Master 

WHERE ElgibleDischFlag = 1 AND DiedBeforeFollowUp = 0 AND PrisonCourtDischarge = 0 ---- only eligible discharges

GROUP BY Disch_MonthYear, OrgIDProv, Provider_Name, Provider_Type , Region_Code, Region_Name, CCGCode, [CCG name],  STPCode, [STP name], AgeCat, BedType_Category, BedType



/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
UNPIVOT AND CREATE EXTRACT
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

IF OBJECT_ID ('MHDInternal.Temp_AcuteDashboard_Output') IS NOT NULL
DROP TABLE MHDInternal.Temp_AcuteDashboard_Output

SELECT 
	Disch_MonthYear
	,OrgIDProv 
	,Provider_Name 
	,Provider_Type
	,Region_Code
	,Region_Name
	,CCGCode 
	,[CCG name] 
	,STPCode
	,[STP name] 
	,BedType_Category
	,BedType 
	,AgeCat
	,MeasureName
	,MeasureValue 
	,CASE 
		WHEN MeasureName = 'FUP_3day' THEN Discharges2 
		WHEN MeasureName IN ('Contacts2weeks','Attendance2weeks') THEN Eligible2wks2
		WHEN MeasureName IN ('Contacts2months','Attendance2months') THEN Eligible2mnths2
	END as Denominator

INTO MHDInternal.Temp_AcuteDashboard_Output

FROM MHDInternal.Temp_AcuteDashboard_Agg

UNPIVOT (MeasureValue FOR MeasureName IN 
		(Discharges, Eligible2wks, Eligible2mnths, FUP_3day, Contacts2weeks, Contacts2months,  
		Attendance2weeks, Attendance2months)) u




drop table MHDInternal.Staging_Acute_Discharges
select * 
into MHDInternal.Staging_Acute_Discharges
from MHDInternal.Temp_AcuteDashboard_Output


DROP TABLE MHDInternal.Temp_AcuteDashboard_Onward
DROP TABLE MHDInternal.Temp_AcuteDashboard_Discharges
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUP
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUPActivity
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUPAttendances
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUPContacts_Spell
DROP TABLE MHDInternal.Temp_AcuteDashboard_FUPAttendances_spell
DROP TABLE MHDInternal.Temp_AcuteDashboard_Master
DROP TABLE MHDInternal.Temp_AcuteDashboard_Agg
DROP TABLE MHDInternal.Temp_AcuteDashboard_Output

/*>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
LOG END  
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/

INSERT INTO [MHDInternal].[PreProc_QueryStatus]

SELECT
	@RP_END AS [Month],
	'Acute Discharges End' AS Step,
	GETDATE() AS [TimeStamp]


END 

